function SMdiA=Dat_trans_v2C(MDI)
MIDsize2=size(MDI,2);

%% In smooth and make-up

% Make-up
mk=10;

% In Smooth
SMT=[1:128; std(tick2ret(MDI))];
SSMT=sortrows(SMT',2);
IND=SSMT(:,1);
VAL=SSMT(:,2);
A1=IND(VAL<0.02);
A2=IND(VAL>=0.02 & VAL<0.09);
A3=IND(VAL>=0.09 & VAL<0.2);
A4=IND(VAL>=0.2 & VAL<0.4);
A5=IND(VAL>=0.4 & VAL<0.6);
A6=IND(VAL>=0.6 & VAL<1);
A7=IND(VAL>=1);

MID=zeros(size(MDI));
for i=1:MIDsize2
    if ismember(i,A1)==1
        MID(:,i)=MDI(:,i);
    elseif ismember(i,A2)==1
        MID(:,i)=smoothdata(MDI(:,i),'gaussian',3);
    elseif ismember(i,A3)==1
        MID(:,i)=smoothdata(MDI(:,i),'gaussian',5);
    elseif ismember(i,A4)==1
        MID(:,i)=smoothdata(MDI(:,i),'gaussian',7);
    elseif ismember(i,A5)==1
        MID(:,i)=smoothdata(MDI(:,i),'gaussian',9);
    elseif ismember(i,A6)==1
        MID(:,i)=smoothdata(MDI(:,i),'gaussian',11);
    elseif ismember(i,A7)==1
        MID(:,i)=smoothdata(MDI(:,i),'gaussian',13);
    end
end
%% Out smooth vals
% values relate to 170 days of backtest

% Smooth Scalar
p1=3;
p2=2;
p4=4;
p5=1;

PS1=[1.6323    2.0043    0.5556    1.0650    1.5377    0.9919    1.6099    0.8741    1.5288    1.7941    1.8025 ...
    1.7137    1.7836    1.2820    1.8388    0.6662    1.3039    1.6800    0.8695    1.3020    1.6202    1.5480 ...
    1.7086    1.0047    1.5505    1.9530    1.3794    1.2781    1.7698    1.2993    2.3711    1.7696    1.9832 ...
    2.6420    1.3759    1.8853    1.2573    1.4337    1.8012    1.4332    1.5853    2.3927    1.8239    1.7792 ...
    1.6186    1.2962    2.6069    1.1156    1.1341    2.0526    1.6189    1.4002    1.3226    1.4953    0.9335 ...
    0.9702    1.4594    1.4716    1.8601    1.3989    1.7691    0.8624    1.9043    2.2990    1.8752    1.5088 ...
    1.5189    1.2860    1.0593    2.3177    1.4619    1.0463    1.4726    1.4059    1.2960    1.4737    1.6942 ...
    1.3069    1.3186    1.4360    0.8250    0.5122    0.5887    1.4168    0.5348    1.2248    1.7475    1.0821 ...
    1.2858    0.9327    1.1602    1.1181    0.8549    1.1007    0.9445    1.0121    0.7005    0.7037    0.8487 ...
    1.1926    1.4069    0.6586    2.1738    0.7519    0.5148    1.4191    0.6923    0.9999    1.1186    1.5849 ...
    2.3917    2.3748    2.3922    1.0246    1.0766    0.7744    1.4657    1.4717    1.0410    0.7751    0.9926 ...
    1.9343    1.7462    0.4926    0.6814    0.6959    1.7323    0.6889];

PS2=[1.6268    2.0066    0.5570    1.0355    1.5389    0.9873    1.6122    0.8714    1.5276    1.7934    1.8045 ...
    1.7116    1.7809    1.2835    1.8409    0.7325    1.3014    1.6835    0.8699    1.3023    1.6186    1.5506 ...
    1.7123    1.0058    1.5506    1.9533    1.3773    1.2773    1.7665    1.2998    2.3723    1.7733    1.9882 ...
    2.6411    1.3759    1.8854    1.2563    1.4355    1.8014    1.4372    1.5850    2.3956    1.8253    1.7799 ...
    1.6226    1.2943    2.6100    1.1168    1.0381    2.0509    1.6232    1.4013    1.3264    1.4952    0.9323 ...
    0.9705    1.4651    1.4719    1.8595    1.4013    1.7658    0.8630    1.9047    2.2995    1.8760    1.5082 ...
    1.5188    1.2875    1.0597    2.3170    1.4654    1.0503    1.4740    1.4016    1.2945    1.4724    1.6963 ...
    1.3065    1.3183    1.4369    0.8246    0.5426    0.5880    1.4161    0.5932    1.2228    1.7451    1.1116 ...
    1.3077    0.9433    1.1585    1.1178    0.8522    1.0997    0.9383    1.0296    0.6996    0.7027    0.8483 ...
    1.1915    1.4050    0.6587    2.1744    0.7517    0.4855    1.4003    0.7324    0.9857    1.1193    1.5823 ...
    2.3918    2.3743    2.3563    1.0239    1.0091    0.7937    1.0668    1.3865    0.9627    0.7430    0.9930 ...
    1.9333    1.7438    0.5781    0.6606    0.7074    1.7534    0.6850];

PS4=[1.6316    2.0052    0.5550    1.0373    1.5368    0.9890    1.6125    0.8711    1.5238    1.7927    1.8025 ...
    1.7160    1.7838    1.2832    1.8412    0.6967    1.3007    1.6776    0.8676    1.3024    1.6477    1.5487 ...
    1.7075    1.0050    1.5523    1.9512    1.3800    1.2770    1.7680    1.2989    2.3712    1.7731    1.9839 ... 
    2.6378    1.3724    1.8858    1.2610    1.4350    1.8081    1.4335    1.5863    2.3941    1.8261    1.7803 ...
    1.6211    1.2910    2.6042    1.1180    1.1333    2.0492    1.6206    1.3994    1.3221    1.4915    0.9406 ...
    0.9713    1.4666    1.4700    1.8606    1.3989    1.7674    0.8619    1.9067    2.3004    1.8801    1.5071 ...
    1.5195    1.2875    1.0606    2.3138    1.4619    1.0482    1.4747    1.4026    1.2947    1.8318    1.6903 ...
    1.3066    1.3202    1.4370    0.8254    0.5431    0.5828    1.4178    0.5634    1.2251    1.7493    1.0767 ...
    1.2844    0.9438    1.1596    1.1213    0.8535    1.1012    0.9452    1.0216    0.7000    0.7258    0.8671 ...
    1.1916    1.4326    0.6966    2.0604    0.7524    0.4875    1.3965    0.6923    1.0017    1.1045    1.5825 ...
    2.3898    2.2999    2.3591    1.0247    1.0617    0.7804    1.2977    1.4844    1.0545    0.7427    0.9936 ...
    1.8633    1.7300    0.5780    0.6744    0.6546    1.7440    0.6890];

PS5=[1.6386    2.0055    0.6644    1.0758    1.5356    0.9920    1.6094    0.8728    1.5208    1.7928    1.8050 ...
    1.7165    1.7827    1.2826    1.8379    0.6916    1.3010    1.6782    0.8707    1.3010    1.6150    1.5472 ... 
    1.7133    1.0056    1.5540    1.9539    1.3749    1.2764    1.7655    1.2998    2.3719    1.7711    1.9853 ...
    2.6385    1.3759    1.8877    1.2560    1.4348    1.8044    1.4324    1.5846    2.3933    1.8305    1.7820 ...
    1.6186    1.2935    2.6074    1.1182    1.1321    2.0505    1.6190    1.4001    1.3235    1.4975    0.9334 ...
    0.9704    1.4642    1.4720    1.7882    1.2558    1.7663    0.8626    1.9059    2.0730    1.8769    1.5079 ... 
    1.5186    1.2882    1.0573    2.3142    1.4637    1.0464    1.4723    1.4040    1.2954    1.4732    1.6907 ...
    1.3496    1.3198    1.4356    0.8240    0.5122    0.5829    1.4239    0.5637    1.2250    1.7489    1.0740 ...
    1.2758    0.9435    1.1601    1.1208    0.8531    1.1011    0.9540    1.0209    0.7012    0.7325    0.8754 ...
    1.3243    1.4331    0.6964    2.1717    0.7520    0.4872    1.3964    0.7415    1.0020    1.1052    1.5756 ...
    2.3932    2.3018    2.3603    1.0228    1.1180    0.7800    1.2957    1.3890    1.0154    0.7430    0.9918 ...
    1.9327    1.6691    0.5780    0.6734    0.6798    1.8142    0.6837];

%% Pit1

Pit1(:,1)=log(MID(:,1));
Pit1(:,2)=log(MID(:,2));
Pit1(:,3)=-log(MID(:,3));
Pit1(:,4)=(log(MID(:,4))-3.6).^2 + 1;
Pit1(:,5)=log(MID(:,5))+2;
for i=6:11
    Pit1(:,i)=log(MID(:,i));
end
Pit1(:,12)=log(MID(:,12))+4;
Pit1(:,13)=log(MID(:,13));
Pit1(:,14)=log(MID(:,14))+3;
for i=15:20
    Pit1(:,i)=log(MID(:,i));
end
Pit1(:,21)=log(MID(:,21))+12;
Pit1(:,22)=log(MID(:,22));
Pit1(:,23)=log(MID(:,23))+10;
for i=24:27
    Pit1(:,i)=log(MID(:,i));
end
Pit1(:,28)=log(MID(:,28))+2;
Pit1(:,29)=log(MID(:,29))+2;
Pit1(:,30)=log(MID(:,30))+9;
for i=31:34
    Pit1(:,i)=log(MID(:,i));
end
Pit1(:,35)=log(MID(:,35))+1;
for i=36:54
    Pit1(:,i)=log(MID(:,i));
end
Pit1(:,55)=MID(:,55);
Pit1(:,56)=log(MID(:,56))+6;
Pit1(:,57)=MID(:,57);
for i=58:62
    Pit1(:,i)=log(MID(:,i));
end
Pit1(:,63)=-log(MID(:,63));
Pit1(:,64)=log(MID(:,64));
Pit1(:,65)=log(MID(:,65));
Pit1(:,66)=log(MID(:,66));
Pit1(:,67)=log(MID(:,67))+5;
Pit1(:,68)=log(MID(:,68))+2;
Pit1(:,69)=log(MID(:,69))+2;
Pit1(:,70)=log(MID(:,70))+2;
Pit1(:,71)=log(MID(:,71))+1;
Pit1(:,72)=log(MID(:,72))+3;
Pit1(:,73)=log(MID(:,73))+2;
Pit1(:,74)=log(MID(:,74));
Pit1(:,75)=log(MID(:,75))+2;
Pit1(:,76)=log(MID(:,76))+3;
Pit1(:,77)=log(MID(:,77));
Pit1(:,78)=MID(:,78)+1;
Pit1(:,79)=log(MID(:,79));
Pit1(:,80)=log(MID(:,80))+3;
Pit1(:,81)=MID(:,81).^3;
Pit1(:,82)=MID(:,82).^2;
Pit1(:,83)=MID(:,83).^2;
Pit1(:,84)=log(MID(:,84));
Pit1(:,85)=MID(:,85).^2;
Pit1(:,86)=MID(:,86);
Pit1(:,87)=log(MID(:,87));
Pit1(:,88)=MID(:,88).^2;
Pit1(:,89)=MID(:,89).^2;
Pit1(:,90)=MID(:,90).^3;
Pit1(:,91)=MID(:,91).^2;
Pit1(:,92)=MID(:,92);
Pit1(:,93)=MID(:,93).^4;
Pit1(:,94)=MID(:,94);
Pit1(:,95)=MID(:,95).^2;
Pit1(:,96)=MID(:,96).^3;
Pit1(:,97)=MID(:,97);
Pit1(:,98)=MID(:,98).^2;
Pit1(:,99)=MID(:,99).^2;
Pit1(:,100)=MID(:,100);
Pit1(:,101)=MID(:,101).^2.5;
Pit1(:,102)=MID(:,102).^2;
Pit1(:,103)=MID(:,103);
Pit1(:,104)=MID(:,104);
Pit1(:,105)=MID(:,105);
Pit1(:,106)=MID(:,106).^2;
Pit1(:,107)=MID(:,107);
Pit1(:,108)=MID(:,108);
Pit1(:,109)=log(MID(:,109));
Pit1(:,110)=MID(:,110);
Pit1(:,111)=log(MID(:,111));
Pit1(:,112)=MID(:,112);
Pit1(:,113)=MID(:,113).^(1/2);
Pit1(:,114)=MID(:,114);
Pit1(:,115)=log(MID(:,115)).^3;
Pit1(:,116)=log(MID(:,116)).^(2/5);
Pit1(:,117)=(log(MID(:,117))+3).^(1/4);
Pit1(:,118)=(log(MID(:,118))+7).^(2/3);
Pit1(:,119)=(log(MID(:,119))+4).^(2/3);
Pit1(:,120)=log(MID(:,120)).^(1/2);
Pit1(:,121)=log(MID(:,121))+4;
Pit1(:,122)=log(MID(:,122))+0.5;
Pit1(:,123)=log(MID(:,123)).^(1/6);
Pit1(:,124)=MID(:,124)-mk;
Pit1(:,125)=log(MID(:,125)).^(1/2);
Pit1(:,126)=log(MID(:,126)).^2;
Pit1(:,127)=(log(MID(:,127))+3).^(1/1.4);
Pit1(:,128)=log(MID(:,128)).^(1/4);
Pit1(isnan(Pit1)==1 | isinf(Pit1)==1)=0;
Pit1=Pit1+mk;

% Data Smooth

Pi1=zeros(size(Pit1));
for i=1:MIDsize2
    if round(p1*PS1(i))==0 || round(p1*PS1(i))==1
        Pi1(:,i)=Pit1(:,i);
    else
        Pi1(:,i)=smoothdata(Pit1(:,i),'gaussian',round(p1*PS1(i)));
    end
end

%% Pit2

Pit2(:,1)=log(MID(:,1));
Pit2(:,2)=log(MID(:,2));
Pit2(:,3)=-log(MID(:,3));
Pit2(:,4)=log(MID(:,4));
Pit2(:,5)=log(MID(:,5))+2;
for i=6:11
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,12)=log(MID(:,12))+4;
Pit2(:,13)=log(MID(:,13));
Pit2(:,14)=log(MID(:,14))+3;
Pit2(:,15)=log(MID(:,15));
Pit2(:,16)=(log(MID(:,16))-35).^(1/6);
for i=17:20
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,21)=log(log(MID(:,21))+13);
Pit2(:,22)=log(MID(:,22));
Pit2(:,23)=log(MID(:,23))+10;
for i=24:27
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,28)=log(MID(:,28))+2;
Pit2(:,29)=log(MID(:,29))+2;
Pit2(:,30)=log(MID(:,30))+9;
for i=31:34
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,35)=-log(MID(:,35))+1;
for i=36:48
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,49)=MID(:,49);
for i=50:54
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,55)=MID(:,55);
Pit2(:,56)=log(MID(:,56))+6;
Pit2(:,57)=MID(:,57);
for i=58:62
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,63)=-log(MID(:,63));
Pit2(:,64)=log(MID(:,64));
Pit2(:,65)=log(MID(:,65));
Pit2(:,66)=log(MID(:,66));
Pit2(:,67)=log(MID(:,67))+5;
Pit2(:,68)=log(MID(:,68))+2;
Pit2(:,69)=log(MID(:,69))+2;
Pit2(:,70)=log(MID(:,70))+2;
Pit2(:,71)=log(MID(:,71))+1;
Pit2(:,72)=log(MID(:,72))+3;
Pit2(:,73)=log(MID(:,73))+2;
Pit2(:,74)=log(MID(:,74));
Pit2(:,75)=log(MID(:,75))+2;
Pit2(:,76)=log(MID(:,76))+3;
Pit2(:,77)=log(MID(:,77))+1;
Pit2(:,78)=MID(:,78)+1;
Pit2(:,79)=log(MID(:,79));
Pit2(:,80)=log(MID(:,80))+3;
Pit2(:,81)=MID(:,81).^3;
Pit2(:,82)=MID(:,82);
Pit2(:,83)=MID(:,83).^2;
for i=84:89
    Pit2(:,i)=log(MID(:,i));
end
Pit2(:,90)=MID(:,90).^2;
Pit2(:,91)=MID(:,91).^2;
Pit2(:,92)=MID(:,92);
Pit2(:,93)=MID(:,93).^2;
Pit2(:,94)=MID(:,94);
Pit2(:,95)=MID(:,95);
Pit2(:,96)=MID(:,96).^1.3;
Pit2(:,97)=MID(:,97);
Pit2(:,98)=MID(:,98).^2;
Pit2(:,99)=MID(:,99).^2;
Pit2(:,100)=MID(:,100);
Pit2(:,101)=MID(:,101).^2.5;
Pit2(:,102)=MID(:,102).^2;
Pit2(:,103)=MID(:,103);
Pit2(:,104)=MID(:,104);
Pit2(:,105)=log(MID(:,105)).^(1/2);
Pit2(:,106)=MID(:,106);
Pit2(:,107)=MID(:,107).^(1/6);
Pit2(:,108)=MID(:,108).^2;
Pit2(:,109)=log(MID(:,109));
Pit2(:,110)=MID(:,110);
Pit2(:,111)=log(MID(:,111));
Pit2(:,112)=MID(:,112);
Pit2(:,113)=log(MID(:,113));
Pit2(:,114)=MID(:,114);
Pit2(:,115)=MID(:,115).^2;
Pit2(:,116)=log(MID(:,116)).^2;
Pit2(:,117)=MID(:,117)+1;
Pit2(:,118)=log(MID(:,118))+7;
Pit2(:,119)=log(MID(:,119))+4;
Pit2(:,120)=log(MID(:,120));
Pit2(:,121)=log(MID(:,121))+4;
Pit2(:,122)=log(MID(:,122))+1;
Pit2(:,123)=log(MID(:,123)).^(1/6);
Pit2(:,124)=log(MID(:,124));
Pit2(:,125)=MID(:,125)-mk;
Pit2(:,126)=log(MID(:,126));
Pit2(:,127)=log(log(MID(:,127))+3)+1;
Pit2(:,128)=log(MID(:,128));
Pit2(isnan(Pit2)==1 | isinf(Pit2)==1)=0;
Pit2=Pit2+mk;

% Data Smooth

Pi2=zeros(size(Pit2));
for i=1:MIDsize2
    if round(p2*PS2(i))==0 || round(p2*PS2(i))==1
        Pi2(:,i)=Pit2(:,i);
    else
        Pi2(:,i)=smoothdata(Pit2(:,i),'gaussian',round(p2*PS2(i)));
    end
end

%% Pit3

Pit3(:,1)=log(MID(:,1));
Pit3(:,2)=log(MID(:,2));
Pit3(:,3)=-log(MID(:,3));
Pit3(:,4)=log(MID(:,4));
Pit3(:,5)=log(MID(:,5))+3;
for i=6:11
    Pit3(:,i)=log(MID(:,i));
end
Pit3(:,12)=log(MID(:,12))+5;
Pit3(:,13)=log(MID(:,13))+1;
Pit3(:,14)=log(MID(:,14))+5;
Pit3(:,15)=log(MID(:,15));
Pit3(:,16)=(log(MID(:,16))-34.5).^(1/4);
for i=17:20
    Pit3(:,i)=log(MID(:,i));
end
Pit3(:,21)=log(-log(MID(:,21)));
Pit3(:,22)=log(MID(:,22));
Pit3(:,23)=-log(MID(:,23));
for i=24:27
    Pit3(:,i)=log(MID(:,i));
end
Pit3(:,28)=log(MID(:,28))+4;
Pit3(:,29)=log(MID(:,29))+4;
Pit3(:,30)=log(MID(:,30))+12;
for i=31:34
    Pit3(:,i)=log(MID(:,i));
end
Pit3(:,35)=MID(:,35).^-1;
for i=36:48
    Pit3(:,i)=log(MID(:,i));
end
Pit3(:,49)=log(MID(:,49))+1;
for i=50:54
    Pit3(:,i)=log(MID(:,i));
end
Pit3(:,55)=-log(MID(:,55));
Pit3(:,56)=log(MID(:,56))+8;
Pit3(:,57)=MID(:,57);
for i=58:62
    Pit3(:,i)=log(MID(:,i));
end
Pit3(:,63)=-log(MID(:,63));
Pit3(:,64)=log(MID(:,64));
Pit3(:,65)=log(MID(:,65));
Pit3(:,66)=log(MID(:,66))+2;
Pit3(:,67)=log(MID(:,67))+5;
Pit3(:,68)=log(MID(:,68))+3;
Pit3(:,69)=log(MID(:,69))+3;
Pit3(:,70)=log(MID(:,70))+2;
Pit3(:,71)=log(MID(:,71))+2;
Pit3(:,72)=log(MID(:,72))+5;
Pit3(:,73)=log(MID(:,73))+3;
Pit3(:,74)=log(MID(:,74))+3;
Pit3(:,75)=log(MID(:,75))+5;
Pit3(:,76)=(log(MID(:,76)+1)+1).^(1/6);
Pit3(:,77)=log(MID(:,77));
Pit3(:,78)=MID(:,78);
Pit3(:,79)=log(MID(:,79));
Pit3(:,80)=log(MID(:,80))+5;
Pit3(:,81)=MID(:,81).^3;
Pit3(:,82)=MID(:,82);
Pit3(:,83)=MID(:,83);
Pit3(:,84)=log(MID(:,84));
Pit3(:,85)=MID(:,85);
Pit3(:,86)=MID(:,86);
Pit3(:,87)=MID(:,87);
Pit3(:,88)=MID(:,88).^2.5;
Pit3(:,89)=MID(:,89).^2;
Pit3(:,90)=MID(:,90).^2;
Pit3(:,91)=MID(:,91).^2;
Pit3(:,92)=log(MID(:,92));
Pit3(:,93)=MID(:,93).^2;
Pit3(:,94)=MID(:,94);
Pit3(:,95)=MID(:,95).^2;
Pit3(:,96)=MID(:,96).^2;
for i=97:102
    Pit3(:,i)=MID(:,i);
end
Pit3(:,103)=log(MID(:,103));
Pit3(:,104)=MID(:,104);
Pit3(:,105)=log(MID(:,105));
Pit3(:,106)=log(MID(:,106));
for i=107:110
    Pit3(:,i)=MID(:,i);
end
Pit3(:,111)=log(MID(:,111));
Pit3(:,112)=log(MID(:,112));
Pit3(:,113)=log(MID(:,113));
Pit3(:,114)=MID(:,114);
Pit3(:,115)=MID(:,115);
Pit3(:,116)=log(MID(:,116));
Pit3(:,117)=log(MID(:,117))+5;
Pit3(:,118)=(log(MID(:,118))+10).^(1/5);
Pit3(:,119)=(log(MID(:,119))+6).^(1/5);
Pit3(:,120)=log(MID(:,120));
Pit3(:,121)=log(MID(:,121))+5;
Pit3(:,122)=(log(MID(:,122))+3).^1.8;
Pit3(:,123)=log(MID(:,123)).^(1/3);
Pit3(:,124)=log(MID(:,124));
Pit3(:,125)=log(MID(:,125));
Pit3(:,126)=MID(:,126)-mk;
Pit3(:,127)=(log(MID(:,127))+3).^(1/5);
Pit3(:,128)=log(MID(:,128)).^(1/3);
Pit3(isnan(Pit3)==1 | isinf(Pit3)==1)=0;
Pit3=Pit3+mk;

% Data Smooth

Pi3=zeros(size(Pit3));
for i=1:MIDsize2
    if round(p4*PS4(i))==0 || round(p4*PS4(i))==1
        Pi3(:,i)=Pit3(:,i);
    else
        Pi3(:,i)=smoothdata(Pit3(:,i),'gaussian',round(p4*PS4(i)));
    end
end

%% Pit4

Pit4(:,1)=log(MID(:,1));
Pit4(:,2)=log(MID(:,2));
Pit4(:,3)=MID(:,3);
Pit4(:,4)=MID(:,4);
Pit4(:,5)=log(MID(:,5))+4;
for i=6:11
    Pit4(:,i)=log(MID(:,i));
end
Pit4(:,12)=log(MID(:,12))+8;
Pit4(:,13)=log(MID(:,13));
Pit4(:,14)=log(MID(:,14))+5;
Pit4(:,15)=log(MID(:,15));
Pit4(:,16)=(log(MID(:,16))-34.3).^(3/11);
for i=17:20
    Pit4(:,i)=log(MID(:,i));
end
Pit4(:,21)=-log(MID(:,21));
Pit4(:,22)=log(MID(:,22));
Pit4(:,23)=-log(MID(:,23));
for i=24:27
    Pit4(:,i)=log(MID(:,i));
end
Pit4(:,28)=log(MID(:,28))+5;
Pit4(:,29)=log(MID(:,29))+5;
Pit4(:,30)=log(MID(:,30))+12;
for i=31:34
    Pit4(:,i)=log(MID(:,i));
end
Pit4(:,35)=log(MID(:,35))+5;
for i=36:48
    Pit4(:,i)=log(MID(:,i));
end
Pit4(:,49)=log(MID(:,49))+2;
for i=50:54
    Pit4(:,i)=log(MID(:,i));
end
Pit4(:,55)=MID(:,55);
Pit4(:,56)=log(MID(:,56))+10;
Pit4(:,57)=MID(:,57);
Pit4(:,58)=log(MID(:,58));
Pit4(:,59)=(log(MID(:,59))-9).^2;
Pit4(:,60)=(log(MID(:,60))-10).^2;
Pit4(:,61)=log(MID(:,61));
Pit4(:,62)=log(MID(:,62));
Pit4(:,63)=-log(MID(:,63));
Pit4(:,64)=MID(:,64);
Pit4(:,65)=log(MID(:,65));
Pit4(:,66)=log(MID(:,66))+1;
Pit4(:,67)=log(MID(:,67))+5;
Pit4(:,68)=log(MID(:,68))+5;
Pit4(:,69)=log(MID(:,69))+5;
Pit4(:,70)=log(MID(:,70))+4;
Pit4(:,71)=log(MID(:,71))+4;
Pit4(:,72)=log(MID(:,72))+6;
Pit4(:,73)=log(MID(:,73))+5;
Pit4(:,74)=log(MID(:,74))+4;
Pit4(:,75)=log(MID(:,75))+7;
Pit4(:,76)=log(MID(:,76))+4;
Pit4(:,77)=log(MID(:,77))+4;
Pit4(:,78)=log(MID(:,78))+3;
Pit4(:,79)=log(MID(:,79))+3;
Pit4(:,80)=log(MID(:,80))+6;
Pit4(:,81)=(MID(:,81)-10).^2;
Pit4(:,82)=MID(:,82).^2;
for i=83:87
    Pit4(:,i)=MID(:,i);
end
Pit4(:,88)=(MID(:,88)-10).^2;
Pit4(:,89)=(MID(:,89)-10).^2.2;
Pit4(:,90)=MID(:,90).^2;
Pit4(:,91)=MID(:,91).^2;
Pit4(:,92)=MID(:,92).^(1/2);
Pit4(:,93)=MID(:,93).^2;
Pit4(:,94)=MID(:,94);
Pit4(:,95)=MID(:,95).^3;
Pit4(:,96)=MID(:,96).^2;
Pit4(:,97)=MID(:,97);
Pit4(:,98)=MID(:,98).^(3/4);
Pit4(:,99)=MID(:,99).^(3/5);
Pit4(:,100)=log(MID(:,100));
for i=101:104
    Pit4(:,i)=MID(:,i);
end
Pit4(:,105)=log(MID(:,105))+1;
Pit4(:,106)=log(MID(:,106));
Pit4(:,107)=log(MID(:,107));
Pit4(:,108)=MID(:,108);
Pit4(:,109)=MID(:,109);
for i=110:113
    Pit4(:,i)=log(MID(:,i));
end
Pit4(:,114)=MID(:,114);
Pit4(:,115)=log(MID(:,115))+2;
Pit4(:,116)=log(MID(:,116))+2;
Pit4(:,117)=log(MID(:,117))+7;
Pit4(:,118)=log(MID(:,118))+15;
Pit4(:,119)=log(log(MID(:,119))+10)+1;
Pit4(:,120)=log(MID(:,120));
Pit4(:,121)=log(MID(:,121))+8;
Pit4(:,122)=log(MID(:,122));
Pit4(:,123)=log(MID(:,123))+1;
Pit4(:,124)=log(MID(:,124));
Pit4(:,125)=log(MID(:,125));
Pit4(:,126)=MID(:,126).^(1/2);
Pit4(:,127)=MID(:,127)-mk;
Pit4(:,128)=log(MID(:,128));
Pit4(isnan(Pit4)==1 | isinf(Pit4)==1)=0;
Pit4=Pit4+mk;

% Data Smooth

Pi4=zeros(size(Pit4));
for i=1:MIDsize2
    if round(p5*PS5(i))==0 || round(p5*PS5(i))==1
        Pi4(:,i)=Pit4(:,i);
    else
        Pi4(:,i)=smoothdata(Pit4(:,i),'gaussian',round(p5*PS5(i)));
    end
end

%% SMdiA

SMdiA={Pi1,Pi2,Pi3,Pi4};

end